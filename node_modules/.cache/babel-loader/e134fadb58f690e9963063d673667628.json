{"remainingRequest":"/Users/ganxiaohu/vue-test01/node_modules/thread-loader/dist/cjs.js!/Users/ganxiaohu/vue-test01/node_modules/babel-loader/lib/index.js!/Users/ganxiaohu/vue-test01/node_modules/eslint-loader/index.js??ref--13-0!/Users/ganxiaohu/vue-test01/src/store.js","dependencies":[{"path":"/Users/ganxiaohu/vue-test01/src/store.js","mtime":1565834981000},{"path":"/Users/ganxiaohu/vue-test01/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ganxiaohu/vue-test01/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ganxiaohu/vue-test01/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ganxiaohu/vue-test01/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport mockGenerator from './mock';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    dataList: []\n  },\n  mutations: {\n    push: function push(state, list) {\n      state.dataList.push(list);\n    }\n  },\n  getters: {\n    getAverage: function getAverage(state) {\n      var allData = state.dataList;\n      var dataLength = 0;\n      var sum = [];\n      var average = 0;\n\n      for (var i = 0; i < allData.length; i++) {\n        sum[i] = 0;\n      }\n\n      for (var count1 = 0; count1 < allData.length; count1++) {\n        for (var count2 = 0; count2 < allData[count1].length; count2++) {\n          sum[count1] += allData[count1][count2].data;\n          dataLength = allData.length * 20;\n        }\n      }\n\n      function avera(array) {\n        var sum = 0;\n\n        for (var i = 0, j = array.length; i < j; i++) {\n          sum += array[i];\n        }\n\n        return sum;\n      }\n\n      var all = avera(sum);\n      average = (all / dataLength).toFixed(2);\n      console.log(all);\n      console.log(dataLength);\n      console.log(average);\n      return average;\n    },\n    getData: function getData(state) {\n      return state.dataList;\n    }\n  },\n  actions: {\n    getDataCall: function getDataCall(context) {\n      mockGenerator().then(function (res) {\n        context.commit('push', res);\n      });\n    }\n  }\n});",{"version":3,"sources":["/Users/ganxiaohu/vue-test01/src/store.js"],"names":["Vue","Vuex","mockGenerator","use","Store","state","dataList","mutations","push","list","getters","getAverage","allData","dataLength","sum","average","i","length","count1","count2","data","avera","array","j","all","toFixed","console","log","getData","actions","getDataCall","context","then","res","commit"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,aAAP,MAA0B,QAA1B;AACAF,GAAG,CAACG,GAAJ,CAAQF,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACG,KAAT,CAAe;AAC5BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL,GADqB;AAI5BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IADS,gBACHH,KADG,EACII,IADJ,EACU;AACjBJ,MAAAA,KAAK,CAACC,QAAN,CAAeE,IAAf,CAAoBC,IAApB;AACD;AAHQ,GAJiB;AAS5BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,EAAE,oBAACN,KAAD,EAAW;AACrB,UAAIO,OAAO,GAAGP,KAAK,CAACC,QAApB;AACA,UAAIO,UAAU,GAAG,CAAjB;AACA,UAAIC,GAAG,GAAG,EAAV;AACA,UAAIC,OAAO,GAAG,CAAd;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,OAAO,CAACK,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvCF,QAAAA,GAAG,CAACE,CAAD,CAAH,GAAS,CAAT;AACD;;AACD,WAAK,IAAIE,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAGN,OAAO,CAACK,MAAtC,EAA8CC,MAAM,EAApD,EAAwD;AACtD,aAAK,IAAIC,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAGP,OAAO,CAACM,MAAD,CAAP,CAAgBD,MAA9C,EAAsDE,MAAM,EAA5D,EAAgE;AAC9DL,UAAAA,GAAG,CAACI,MAAD,CAAH,IAAeN,OAAO,CAACM,MAAD,CAAP,CAAgBC,MAAhB,EAAwBC,IAAvC;AACAP,UAAAA,UAAU,GAAGD,OAAO,CAACK,MAAR,GAAiB,EAA9B;AACD;AACF;;AACD,eAASI,KAAT,CAAgBC,KAAhB,EAAuB;AACrB,YAAIR,GAAG,GAAG,CAAV;;AACA,aAAK,IAAIE,CAAC,GAAG,CAAR,EAAWO,CAAC,GAAGD,KAAK,CAACL,MAA1B,EAAkCD,CAAC,GAAGO,CAAtC,EAAyCP,CAAC,EAA1C,EAA8C;AAC5CF,UAAAA,GAAG,IAAIQ,KAAK,CAACN,CAAD,CAAZ;AACD;;AACD,eAAOF,GAAP;AACD;;AACD,UAAIU,GAAG,GAAGH,KAAK,CAACP,GAAD,CAAf;AACAC,MAAAA,OAAO,GAAG,CAACS,GAAG,GAAGX,UAAP,EAAmBY,OAAnB,CAA2B,CAA3B,CAAV;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYd,UAAZ;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AACA,aAAOA,OAAP;AACD,KA7BM;AA8BPa,IAAAA,OAAO,EAAE,iBAAAvB,KAAK;AAAA,aAAIA,KAAK,CAACC,QAAV;AAAA;AA9BP,GATmB;AAyC5BuB,EAAAA,OAAO,EAAE;AACPC,IAAAA,WADO,uBACMC,OADN,EACe;AACpB7B,MAAAA,aAAa,GAAG8B,IAAhB,CAAqB,UAACC,GAAD,EAAS;AAC5BF,QAAAA,OAAO,CAACG,MAAR,CAAe,MAAf,EAAuBD,GAAvB;AACD,OAFD;AAGD;AALM;AAzCmB,CAAf,CAAf","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport mockGenerator from './mock'\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    dataList: []\n  },\n  mutations: {\n    push (state, list) {\n      state.dataList.push(list)\n    }\n  },\n  getters: {\n    getAverage: (state) => {\n      var allData = state.dataList\n      var dataLength = 0\n      var sum = []\n      var average = 0\n      for (var i = 0; i < allData.length; i++) {\n        sum[i] = 0\n      }\n      for (var count1 = 0; count1 < allData.length; count1++) {\n        for (var count2 = 0; count2 < allData[count1].length; count2++) {\n          sum[count1] += allData[count1][count2].data\n          dataLength = allData.length * 20\n        }\n      }\n      function avera (array) {\n        var sum = 0\n        for (var i = 0, j = array.length; i < j; i++) {\n          sum += array[i]\n        }\n        return sum\n      }\n      var all = avera(sum)\n      average = (all / dataLength).toFixed(2)\n\n      console.log(all)\n      console.log(dataLength)\n      console.log(average)\n      return average\n    },\n    getData: state => state.dataList\n  },\n  actions: {\n    getDataCall (context) {\n      mockGenerator().then((res) => {\n        context.commit('push', res)\n      })\n    }\n  }\n})\n"]}]}